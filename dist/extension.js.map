{"version":3,"file":"extension.js","mappings":"uFAAA,MAAqBA,GAArB,YAC2B,EAAAC,aAAe,2B,QCD1CC,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCnBf,eACA,SAIA,oBAAyBQ,GAIxBC,QAAQC,IAAI,+DAKZ,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,UAAMhB,cAAc,KAIpE,IAAIiB,EAAkC,CACrCC,KAAM,SACNC,IAAKL,EAAOM,UAAUC,iBAAmBP,EAAOM,UAAUC,iBAAiB,GAAGC,IAAIC,OAAS,IAE7ET,EAAOU,OAAOC,eAAeR,MAI7CP,EAAQgB,cAAcC,KAAKd,IAI5B,2B","sources":["webpack://vsc-plugin/./src/event.ts","webpack://vsc-plugin/external commonjs \"vscode\"","webpack://vsc-plugin/webpack/bootstrap","webpack://vsc-plugin/./src/extension.ts"],"sourcesContent":["export default class Event {\r\n    public static readonly LAYA_COMPILE = \"vsc-plugin.laya.compile\";\r\n}","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport Event from './event';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"vsc-plugin\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand(Event.LAYA_COMPILE, () => {\n\t\t// The code you place here will be executed every time your command is executed\n\t\t// Display a message box to the user\n\t\t// vscode.window.showInformationMessage('插件已启动！');\n\t\tlet options: vscode.TerminalOptions = {\n\t\t\tname: 'laya编译',\n\t\t\tcwd: vscode.workspace.workspaceFolders ? vscode.workspace.workspaceFolders[0].uri.fsPath : '',\n\t\t}\n\t\tlet terminal = vscode.window.createTerminal(options);\n\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() { }\n"],"names":["Event","LAYA_COMPILE","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","console","log","disposable","vscode","commands","registerCommand","options","name","cwd","workspace","workspaceFolders","uri","fsPath","window","createTerminal","subscriptions","push"],"sourceRoot":""}